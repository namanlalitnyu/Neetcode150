// #Question and Response
// Given an integer array nums of unique elements, return all possible 
// subsets (the power set).
// The solution set must not contain duplicate subsets. Return the solution in any order.

class Solution {
public:
    void calc(vector<int>& nums, vector<vector<int>>& res, int index){
        if(index >= nums.size()) return;
        vector<vector<int>> temp = res;
        for(int i=0;i<temp.size();i++){
            temp[i].push_back(nums[index]);
        }
        res.insert(res.end(), temp.begin(), temp.end());
        index++;
        calc(nums, res, index);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> res;
        res.push_back({});
        calc(nums, res, 0);
        return res;
    }
};

// #Input
// nums = [1,2,3]
// #Output
// [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]