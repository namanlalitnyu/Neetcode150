// # Question
// Given n non-negative integers representing an elevation map where the width of 
// each bar is 1, compute how much water it can trap after raining.
// # Return
// Return the total amount of water that can be stored.

class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        vector<int> pref(n,0), suff(n,0);
        for(int i=0;i<n;i++){
            if(i==0) pref[i] = height[i];
            else pref[i] = max(pref[i-1], height[i]);
        }
        for(int i=n-1;i>=0;i--){
            if(i==n-1) suff[i] = height[i];
            else suff[i] = max(suff[i+1], height[i]);
        }
        int total = 0;
        for(int i=0;i<n;i++){
            total+= min(pref[i], suff[i]) - height[i];
        }
        return total;
    }
};

// ## Sample Input:
// height:- [0,1,0,2,1,0,1,3,2,1,2,1]
//
// ## Expected Output:
// 6