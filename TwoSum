// # Question
// Given an array of integers nums and an integer target, 
// return indices of the two numbers such that they add up to target.
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<pair<int,int>> mapping;
        for(int i=0;i<nums.size();i++) v.push_back({nums[i], i});
        sort(mapping.begin(), mapping.end());
        int i=0, j=nums.size()-1;
        while(i < j){
            if(mapping[i].first + mapping[j].first == target) return {mapping[i].second, mapping[j].second};
            else if(mapping[i].first + mapping[j].first > target) j--;
            else i++;
        }
        return {};
    }
};
// ## Sample Input:
// Nums:- [2,7,11,15]
// Target:- 9
//
// ## Expected Output:
// { 0, 1 }