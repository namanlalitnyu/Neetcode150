// #Question and Response
// You are given an array of integers stones where stones[i] is the weight of the ith stone.
// We are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is:
// If x == y, both stones are destroyed, and
// If x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.
// At the end of the game, there is at most one stone left.
// Return the weight of the last remaining stone. If there are no stones left, return 0.

class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        priority_queue<int> pq;
        for(int x: stones) pq.push(x);
        while(pq.size() > 0){
            if(pq.size() == 1) return pq.top();
            else{
                int v1 = pq.top();
                pq.pop();
                int v2 = pq.top();
                pq.pop();
                if(v1 == v2) continue;
                else pq.push(abs(v1-v2));
            }
        }
        return 0;
    }
};

// #Input
// stones = [2,7,4,1,8,1]
// [[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]
// #Output
// 1
