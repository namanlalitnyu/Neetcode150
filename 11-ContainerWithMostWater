// # Question
// You are given an integer array height of length n. 
// There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
// Find two lines that together with the x-axis form a container, such that the container contains the most water.

// # Return
// Return the maximum amount of water a container can store.

class Solution {
public:
    int maxArea(vector<int>& height) {
        int n = height.size();
        int result = 0;
        int start = 0, end = n-1;
        while(start < end){
            int val = (end-start)*(min(height[start], height[end]));
            result = max(result, val);
            if(height[start] < height[end]) start++;
            else end--;
        }
        return result;
    }
};

// ## Sample Input:
// height:- [1,8,6,2,5,4,8,3,7]
//
// ## Expected Output:
// 49