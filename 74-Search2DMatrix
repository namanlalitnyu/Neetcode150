// # Question and Return Value
// You are given an m x n integer matrix matrix with the following two properties:
// Each row is sorted in non-decreasing order.
// The first integer of each row is greater than the last integer of the previous row.
// Given an integer target, return true if target is in matrix or false otherwise.

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size(), m = matrix[0].size();
        if(matrix[0][0] == target or matrix[n-1][m-1] == target) return true;
        int start = 0, end = n*m-1;
        while(start <= end){
            int mid = (start+end)/2;
            if(target == matrix[mid/m][mid%m]) return true;
            else if(target < matrix[mid/m][mid%m]) end = mid-1;
            else start = mid+1;
        }
        return false;
    }
};

// ## Sample Input:
// matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]]
// target = 3
// 
// ## Expected Output:
// true