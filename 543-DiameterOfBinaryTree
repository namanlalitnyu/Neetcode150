// #Question and Response
// Given the root of a binary tree, return the length of the diameter of the tree.
// The diameter of a binary tree is the length of the longest path between any two nodes in a tree. 
// This path may or may not pass through the root.
// The length of a path between two nodes is represented by the number of edges between them

class Solution {
public:
    int result;
    int dfs(TreeNode* root){
        if(!root) return 0;
        int lft = dfs(root->left);
        int rht = dfs(root->right);
        int val = lft + rht + 1;
        result = max(result, val);
        return max(lft, rht) + 1;
    }
    int diameterOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        result = 1;
        dfs(root);
        return result-1;
    }
};

// #Input
// root = [1,2,3,4,5]
// #Output
// 3