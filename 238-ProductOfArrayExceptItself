// # Question
// Given an integer array nums, generate an array answer such that answer[i]
// is equal to the product of all the elements of nums except nums[i].

// # Return
// Return an array answer such that answer[i] is equal to the product of all the
// elements of nums except nums[i].

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> pref(n, 1), suff(n, 1);
        pref[0] = nums[0];
        for(int i=1;i<n;i++){
            pref[i] = pref[i-1] * nums[i];
        }
        suff[n-1] = nums[n-1];
        for(int i=n-2;i>=0;i--){
            suff[i] = suff[i+1]*nums[i];
        }
        vector<int> result(n,1);
        for(int i=0;i<n;i++){
            if(i == 0){
                result[i] = suff[i+1];
            }else if(i == n-1){
                result[i] = pref[i-1];
            }else{
                result[i] = pref[i-1] * suff[i+1];
            }
        }
        return result;
    }
};

// ## Sample Input:
// Nums:- [1,2,3,4]
//
// ## Expected Output:
// [24,12,8,6]