// #Question and Response
// Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with
// the same structure and node values of subRoot and false otherwise.
// A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's 
// descendants. The tree tree could also be considered as a subtree of itself.

class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(!p and !q) return true;
        if(!p or !q) return false;
        if(p->val != q->val) return false;
        return isSameTree(p->left, q->left) and isSameTree(p->right, q->right);
    }
};

// #Input
// root = [3,4,5,1,2], subRoot = [4,1,2]
// #Output
// true