// # Question and Response
// You are given the heads of two sorted linked lists list1 and list2.
// Merge the two lists into one sorted list. The list should be made by 
// splicing together the nodes of the first two lists.
// Return the head of the merged linked list.

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(!list1 and !list2) return NULL;
        if(!list1) return list2;
        if(!list2) return list1;
        ListNode* result = new ListNode();
        ListNode* head = result;
        while(list1 and list2){
            if(list1->val <= list2->val){
                result->next = list1;
                list1 = list1->next;
            }else{
                result->next = list2;
                list2 = list2->next;
            }
            result = result->next;
        }
        while(list1){
            result->next = list1;
            list1 = list1->next;
            result = result->next;
        }
        while(list2){
            result->next = list2;
            list2 = list2->next;
            result = result->next;
        }
        return head->next;
    }
};

// # Inputs
// list1 = [1,2,4]
// list2 = [1,3,4]
// # Output
// [1, 1, 2, 3, 4, 4]