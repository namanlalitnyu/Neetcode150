// #Question and Response
// A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has
// an edge connecting them. A node can only appear in the sequence at most once. 
// Note that the path does not need to pass through the root.
// The path sum of a path is the sum of the node's values in the path.
// Given the root of a binary tree, return the maximum path sum of any non-empty path.

class Solution {
public:
    int maxSum;
    int dfs(TreeNode* root){
        if(!root) return 0;
        int lft = max(0, dfs(root->left));
        int rht = max(0, dfs(root->right));
        int mx = max(lft, rht);
        maxSum = max(maxSum, lft + rht + root->val);
        return mx + root->val;
    }
    int maxPathSum(TreeNode* root) {
        maxSum = INT_MIN;
        dfs(root);
        return maxSum;
    }
};

// #Input
// root = [1,2,3]
// #Output
// 6